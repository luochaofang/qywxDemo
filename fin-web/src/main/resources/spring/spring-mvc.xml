<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    	http://www.springframework.org/schema/task
    	http://www.springframework.org/schema/task/spring-task-3.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
    <!-- 启用spring mvc 注解 -->
    <context:annotation-config/>
    <aop:aspectj-autoproxy/>
    <!--<context:component-scan base-package="com.zw.web.base.aop"/>-->
    <!-- 设置使用注解的类所在的jar包 -->
    <context:component-scan base-package="com.zw.**.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


    <!--Controller方法中抛出异常的处理-->
    <bean id="exceptionHandler" class="com.zw.rule.web.interceptor.AppExceptionHandler"/>

    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/pages/"
          p:suffix=".jsp"/>

    <!-- 	如果使用了<mvc:annotation-driven />(这个是使用requestbody和responseBody必须使用的标签)， 它会自动注册DefaultAnnotationHandlerMapping 与AnnotationMethodHandlerAdapter 这两个bean -->
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/xml;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>image/jpeg</value>
                    </list>
                </property>
            </bean>
            <bean id="mappingJacksonHttpMessageConverter"
                  class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <!-- 解决 HttpMediaTypeNotAcceptableException: Could not find acceptable representation -->
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false"/>
        <property name="favorParameter" value="true"/>
        <property name="mediaTypes">
            <map>
                <entry key="atom" value="application/atom+xml"/>
                <entry key="html" value="text/html"/>
                <entry key="json" value="application/json"/>
                <entry key="xml" value="application/xml"/>
            </map>
        </property>
    </bean>

    <task:annotation-driven /> <!-- 定时器开关-->

    <!--<bean id="TaskInterest" class="com.zw.rule.timedTask.service.TaskInterest"></bean>-->

    <!--<task:scheduled-tasks>-->
        <!--&lt;!&ndash;&lt;!&ndash; 这里表示的是每隔五秒执行一次 &ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;<task:scheduled ref="TaskInterest" method="upDateRepayment" cron="*/5 * * * * ?" />&ndash;&gt;-->
        <!--&lt;!&ndash; 这里表示的是凌晨2点执行 &ndash;&gt;-->
        <!--<task:scheduled ref="TaskInterest" method="timingUpDate" cron="0 0 2 * * ?" />-->
    <!--</task:scheduled-tasks>-->

    <!-- <bean id="threadLocalInterceptor" class="com.zw.web.base.interceptor.ThreadLocalInterceptor"></bean>
     <bean id="loginValidateInterceptor" class="com.zw.web.base.interceptor.LoginInterceptor">
     </bean>
     <mvc:interceptors>
         <mvc:interceptor>
             <mvc:mapping path="/"/>
             <mvc:mapping path="/*"/>
             <mvc:mapping path="/**"/>
             <mvc:exclude-mapping path="/resources/**"/>
             <ref bean="threadLocalInterceptor"/>
         </mvc:interceptor>
         <mvc:interceptor>
             <mvc:mapping path="/**"/>
             <mvc:exclude-mapping path="/"/>
             <mvc:exclude-mapping path="/AssistApply/**"/>
             <mvc:exclude-mapping path="/appscanning"/>
             <mvc:exclude-mapping path="/uxmyaccount/notic"/>
             <mvc:exclude-mapping path="/login/**"/>
             <mvc:exclude-mapping path="/reg/**"/>
             <mvc:exclude-mapping path="/forgetPw/**"/>
             <mvc:exclude-mapping path="/resetPw/**"/>
             <mvc:exclude-mapping path="/resources/**"/>
             <mvc:exclude-mapping path="/comm/**"/>
             <ref bean="loginValidateInterceptor"/>
         </mvc:interceptor>
     </mvc:interceptors>-->

    <!-- 对springMVC中进行上传下载功能实现 modify by 陈清玉-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8" />
        <!-- 指定所上传文件的总大小不能超过10MB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
        <property name="maxUploadSize" value="10485760" />
    </bean>

    <!-- 对js引用的设置 -->
    <mvc:resources location="/resources/" mapping="/resources/**" cache-period="31556926"/>
    <mvc:default-servlet-handler/>

    <mvc:view-controller path="/" view-name="login"/>

    <!-- 读入配置属性文件 -->
    <context:property-placeholder
            ignore-unresolvable="true"
            file-encoding="UTF-8"
            location="classpath*:/properties/*.properties"/>

    <mvc:interceptors>
        <!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
    </mvc:interceptors>

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="zh_CN"/>
    </bean>

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="message.messages"/>
        <property name="useCodeAsDefaultMessage" value="true" />
    </bean>
</beans>